name: 'puLL-Merge'
description: 'puLL-Merge is a github-action to add LLM capabilities to pull-requests in github automatically'
inputs:
  github_token:
    description: |
      Secret token to push review comments, and
      interact with the repository systematically
    required: true
  openai_api_key:
    description: |
      API key to interact with the OpenAI endpoint
  anthropic_api_key:
    description: |
      API key to interact with the Anthropic endpoint
  debounce_time:
    description: |
      Debounce Time in hours
  amplification:
    description: |
      Amplification factor for the generated text
  filterdiff_args:
    description: |
      Arguments to pass to filterdiff
  openai_models:
    description: |
      selection of models to use for the openai endpoint
  anthropic_models:
    description: |
      selection of models to use for the anthropic endpoint
  run_if_private:
    description: |
      run the action even if the repository is private
  debug:
    description: enables debug output for this action
    required: false
  repo:
    description: |
      force the repository to run the action on
    required: false
  owner:
    description: |
      force the owner to run the action on
    required: false
  prnum:
    description: |
      force the pull request number to run the action on
    required: false
  max_tokens:
    description: |
      maximum number of tokens to generate
    required: false
# outputs:
runs:
  using: 'composite'
  steps:
    - uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
      with:
        node-version: '20.x'
    - name: Install patchutils for filterdiff
      uses: awalsh128/cache-apt-pkgs-action@44c33b32f808cdddd5ac0366d70595ed63661ed8 # v1.3.1
      with:
        packages: patchutils
        version: 1.0
    - id: npm
      run: cd ${{ github.action_path }}; npm ci
      shell: bash
    - id: llm-and-post-message
      uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
      if: ${{ !contains(github.event.pull_request.labels.*.name, 'CI/skip-llm') && !contains(github.event.pull_request.labels.*.name, 'CI/skip') && github.event.pull_request.draft == false }}
      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}
        DEBUG: ${{ (inputs.debug == 'true' || runner.debug) && 'true' || 'false'}}
      with:
          script: |
            const { default: filterdiff } = await import('${{ github.action_path }}/src/filterdiff.js')
            const { default: getPatch } = await import('${{ github.action_path }}/src/getPatch.js')
            const { default: getRenovatePatch } = await import('${{ github.action_path }}/src/getRenovatePatch.js')
            const { default: getDependabotPatch } = await import('${{ github.action_path }}/src/getDependabotPatch.js')
            const { default: getConfig } = await import('${{ github.action_path }}/src/getConfig.js')
            const { default: getProperties } = await import('${{ github.action_path }}/src/getProperties.js')

            const inputs = ${{ toJson(inputs) }};
            // delete if empty string in inputs value
            Object.keys(inputs).forEach(key => inputs[key] === '' && delete inputs[key])

            let debug = process.env.DEBUG == 'true'
            if (debug) console.log('Initializing puLL-Merge')

            const config = await getConfig({ owner: context.repo.owner, repo: context.repo.repo, path: '.github/pull-merge.json', debug, github })
            const properties = await getProperties({ owner: context.repo.owner, repo: context.repo.repo, debug, github })

            const options = Object.assign({
              debounce_time: '6',
              amplification: '4',
              filterdiff_args: '--exclude=**/package-lock.json --exclude=**/yarn.lock --exclude=**/*.js.map --exclude=**/*.svg --exclude=**/test/data/**/* --exclude=**/docs/**/* --exclude=**/deploy/**/* --exclude=**/.htpasswd',
              openai_models: 'gpt-4-turbo-2024-04-09 gpt-3.5-turbo-0125',
              anthropic_models: 'claude-3-opus-20240229',
              owner: context.repo.owner,
              repo: context.repo.repo,
              prnum: context.issue.number,
              max_tokens: '2048',
              subtle_mode: 'false'
            }, config, properties, inputs)

            // convert to numbers some options
            options.debounce_time = parseFloat(options.debounce_time, 10)
            options.amplification = parseFloat(options.amplification, 10)
            options.prnum = parseFloat(options.prnum, 10)
            options.max_tokens = parseFloat(options.max_tokens, 10)
            options.subtle_mode = options.subtle_mode === 'true'

            const { default: explainPatch } = options.anthropic_api_key
              ? await import('${{ github.action_path }}/src/anthropicExplainPatch.js')
              : await import('${{ github.action_path }}/src/openaiExplainPatch.js')

            const { default: submitReview } = options.subtle_mode
              ? await import('${{ github.action_path }}/src/subtleSubmitReview.js')
              : await import('${{ github.action_path }}/src/submitReview.js')

            options.key = options.anthropic_api_key || options.openai_api_key
            options.models = options.anthropic_api_key ? options.anthropic_models : options.openai_models

            debug = options.debug ? (options.debug == 'true') : debug

            if (debug) {
              console.log(`Using options: ${JSON.stringify(options)}`)
              console.log(`Using config: ${JSON.stringify(config)}`)
              console.log(`Using properties: ${JSON.stringify(properties)}`)
              console.log(`Using inputs: ${JSON.stringify(inputs)}`)
            }

            let patch = null

            try {
              // if the PR is a renovate PR, we need to get the patch from the renovate API
              // check if the PR actor is renovate[bot]

              if ((context.payload.pull_request && context.payload.pull_request.user.login === 'renovate[bot]') || context.actor === 'renovate[bot]') {
                patch = await getRenovatePatch({
                  owner: options.owner,
                  repo: options.repo,
                  prnum: options.prnum,
                  debug,
                  github
                })
              } else if ((context.payload.pull_request && context.payload.pull_request.user.login === 'dependabot[bot]') || context.actor === 'dependabot[bot]') {
                patch = await getDependabotPatch({
                  owner: options.owner,
                  repo: options.repo,
                  prnum: options.prnum,
                  debug,
                  github
                })
              } else {
                patch = await getPatch({
                  owner: options.owner,
                  repo: options.repo,
                  prnum: options.prnum,
                  debug,
                  runIfPrivate: options.run_if_private,
                  github
                })
              }

              const filteredPatch = await filterdiff({
                content: patch.body,
                args: options.filterdiff_args,
                debug
              })

              const explainPatchCb = async () => await explainPatch({
                apiKey: options.key,
                patchBody: filteredPatch,
                owner: patch.owner,
                repo: patch.repo,
                debug,
                models: options.models.split(' '),
                amplification: options.amplification,
                max_tokens: options.max_tokens
              })

              await submitReview({
                owner: options.owner,
                repo: options.repo,
                prnum: options.prnum,
                watermark: patch.watermark,
                explainPatch: explainPatchCb,
                debounceTime: options.debounce_time,
                debug,
                github
              })

              await github.rest.issues.addLabels({
                owner: options.owner,
                repo: options.repo,
                issue_number: options.prnum,
                labels: ['puLL-Merge']
              })
            } catch (error) {
              console.log(error)
              if (debug) throw error
            }
