name: 'puLL-Merge'
description: 'puLL-Merge is a github-action to add LLM capabilities to pull-requests in github automatically'
inputs:
  github_token:
    description: |
      Secret token to push review comments, and
      interact with the repository systematically
    required: true
  openai_api_key:
    description: |
      API key to interact with the OpenAI endpoint
  debounce_time:
    description: |
      Debounce Time in hours
    default: "6"
  amplification:
    description: |
      Amplification factor for the generated text
    default: "4"
  filterdiff_args:
    description: |
      Arguments to pass to filterdiff
    default: --exclude=**/package-lock.json
  debug:
    description: enables debug output for this action
    required: false

# outputs:
runs:
  using: 'composite'
  steps:
    - uses: actions/setup-node@8f152de45cc393bb48ce5d89d36b731f54556e65 # v4.0.0
      with:
        node-version: '20.x'
    - name: Install patchutils for filterdiff
      uses: awalsh128/cache-apt-pkgs-action@44c33b32f808cdddd5ac0366d70595ed63661ed8 # v1.3.1
      with:
        packages: patchutils
        version: 1.0
    - id: npm
      run: cd ${{ github.action_path }}; npm ci
      shell: bash
    - id: llm-and-post-message
      uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
      if: ${{ inputs.openai_api_key != '' && !contains(github.event.pull_request.labels.*.name, 'CI/skip-llm') && !contains(github.event.pull_request.labels.*.name, 'CI/skip') && github.event.pull_request.draft == false && !endsWith(github.actor, '[bot]') }}
      env:
        OPENAI_API_KEY: ${{ inputs.openai_api_key }}
        GITHUB_TOKEN: ${{ inputs.github_token }}
        DEBUG: ${{ inputs.debug }}
        DEBOUNCE_TIME: ${{ inputs.debounce_time }}
        AMPLIFICATION: ${{ inputs.amplification }}
        FILTERDIFF_ARGS: ${{ inputs.filterdiff_args }}
      with:
          script: |
            const debug = process.env.DEBUG == 'true';
            if (debug) console.log("Initializing puLL-Merge");
            const debounceHours = parseInt(process.env.DEBOUNCE_TIME, 10);
            const { default: explainPatch } = await import('${{ github.action_path }}/src/openaiExplainPatch.js');

            function isOlderThanXHours(date, hours) {
              // Get the current date and time
              var now = new Date();

              // Calculate the time difference in milliseconds
              var timeDiff = now - new Date(date);

              // Convert the time difference to hours
              var timeDiffInHours = timeDiff / (1000 * 60 * 60);

              // Check if the time difference is greater than the specified number of hours
              return timeDiffInHours > hours;
            }

            const watermark = `[puLL-Merge] - ${process.env.GITHUB_REPOSITORY}@${context.issue.number}`

            try {
              const query = `query($owner:String!, $name:String!, $prnumber:Int!) {
                repository(owner:$owner, name:$name) {
                  pullRequest(number:$prnumber) {
                    comments(last: 100) {
                      nodes {
                        id
                        author { login }
                        body
                        updatedAt
                      }
                    }
                  }
                }
              }`;
              const variables = {
                owner: context.repo.owner,
                name: context.repo.repo,
                prnumber: context.issue.number
              }
              const messages = (await github.graphql(query, variables)).repository.pullRequest.comments.nodes;

              if (messages.some(msg => msg.body.includes(watermark) && !isOlderThanXHours(msg.updatedAt, debounceHours))) {
                throw new Error("debounce");
              }

              const deleteQuery = `mutation DeleteIssueComment($id:ID!) {
                deleteIssueComment(input:{id:$id}) {
                  clientMutationId
                }
              }`

              if (debug) console.log(`Deleting ${messages.length} message(s)`);
              for (var i = 0; i < messages.length; i++) {
                if (messages[i].body.includes(watermark)) {
                  await github.graphql(deleteQuery, {id: messages[i].id});
                }
              }

              const patchExplained = watermark+"\n\n"+(await explainPatch({
                openaiKey: process.env.OPENAI_API_KEY,
                github: github,
                owner: context.repo.owner,
                repo: context.repo.repo,
                prnum: context.issue.number,
                debug: debug,
                amplification: parseInt(process.env.AMPLIFICATION, 10),
                filterdiffArgs: process.env.FILTERDIFF_ARGS }));

              github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: patchExplained
              });

              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                labels: ["puLL-Merge"],
              });
            } catch (error) {
              console.log(error);
              if (debug) throw error;
            }
