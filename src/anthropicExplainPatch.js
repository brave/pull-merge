import Anthropic from '@anthropic-ai/sdk';
import { countTokens } from '@anthropic-ai/tokenizer';

export default async function explainPatch({apiKey, patchBody, owner, repo,
  models = ['claude-3-opus-20240229'],
  system = `
You are an expert software engineer reviewing a pull request on Github. Lines that start with "+" have been added, lines that start with "-" have been deleted. Use markdown for formatting your review.

Desired format:
### Description
<description_of_PR> // How does this PR change the codebase? What is the motivation for this change?

### Changes
<list_of_changes> // Describe the main changes in the PR, organizing them by filename

### Security Hotspots
<list_of_security_hotspots> // Describe locations for possible vulnerabilities in the change, order by risk
\n`,
  max_tokens = 2048,
  temperature = 1,
  top_p = 1,
  amplification = 2,
  debug = false}) {

  const user_prompt = `Repository: https://github.com/${owner}/${repo}\n\nThis is the PR diff\n\`\`\`\n${patchBody}\n\`\`\``;
  const realModels = Array.isArray(models) ? models : models.split(" ");

  if (debug) {
    console.log(`user_prompt:\n\n${user_prompt}`);
  }

  const pLen = countTokens(patchBody);
  if (pLen === 0)
    throw new Error("The patch is empty, cannot summarize!");
  if (pLen < amplification*max_tokens)
    throw new Error("The patch is trivial, no need for a summarization");  


  const anthropic = new Anthropic({apiKey});
  
  let model = null;

  // iterate over the models, and find one that works, or throw the last error
  // catch all the original errors in between, and throw the last one
  for (let i = 0; i < realModels.length; i++)
    try {
      model = realModels[i];

      var aiResponse = await anthropic.messages.create({
        max_tokens,
        temperature,
        model,
        top_p,
        system,
        messages: [
          {
            role: 'user',
            content: user_prompt
          }
        ]
      });

      break;
    } catch (e) {
      if (i+1 === realModels.length) // last model
        throw e;

      console.log(e);
      continue;
    }

  let response = aiResponse.content;

  if (debug) {
    console.log(response);
  }

  response = response[0].text.replaceAll("### Changes", "<details>\n<summary><i>Changes</i></summary>\n\n### Changes");
  response = response.replaceAll("### Security Hotspots", "</details>\n\n### Security Hotspots");
  response += `\n\n<!-- Generated by ${model} -->`;

  return response;
}
